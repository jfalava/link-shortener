---
import { localizedTextInputPlaceholder } from "@/i18n/components/TextInput.i18n";
import type { Locale } from "@/utils/get-locale";
interface Props {
  locale: keyof Locale;
}

const { locale } = Astro.props;
---

<div class="relative">
  <input
    id="long-url"
    type="url"
    name="url"
    aria-label={localizedTextInputPlaceholder[locale]}
    required
    placeholder={`ðŸ”— ${localizedTextInputPlaceholder[locale]}`}
    class="w-full text-mono font-light p-3 border border-solid border-bwhite dark:border-bblack rounded-xl select-none pr-10"
  />
  <button
    type="button"
    id="clear-input"
    aria-label="Clear input"
    class="absolute cursor-pointer right-3 top-1/2 -translate-y-1/2 hidden dark:bg-bblack hover:dark:bg-bblack/70 rounded-full"
  >
  <svg xmlns="http://www.w3.org/2000/svg" width="28" height="28" class="dark-invert" viewBox="0 0 24 24"><path fill="none" stroke="currentColor" stroke-linecap="round" stroke-width="1.5" d="m8.464 15.535l7.072-7.07m-7.072 0l7.072 7.07"/></svg>
  </button>
</div>

<script>
  import { inputFocus } from "@/utils/input-focus";

  const input = document.getElementById("long-url") as HTMLInputElement;
  const clearButton = document.getElementById("clear-input");

  input.addEventListener("input", () => {
    if (input.value) {
      clearButton?.classList.remove("hidden");
    } else {
      clearButton?.classList.add("hidden");
    }
  });

  clearButton?.addEventListener("click", () => {
    if (input) {
      input.value = "";
      clearButton.classList.add("hidden");
      input.focus();
    }
  });

  inputFocus("long-url");
</script>
