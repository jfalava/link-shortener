---
import type { Locale } from "@/utils/get-locale";

import {
  localizedCopyButton,
  localizedShortenMore,
} from "@/i18n/components/ShortenedLink.i18n";

import CopyIcon from "@/assets/CopyIcon.astro";
import OKIcon from "@/assets/OKIcon.astro";
import Button from "@/components/elements/Button.astro";
import ShareIcon from "@/assets/ShareIcon.astro";

interface Props {
  locale: keyof Locale;
}

const { locale } = Astro.props;
---

<div
  class="grid gap-y-3 invisible [grid-area:shared] z-10"
  id="shortened-link-section"
>
  <div class="flex justify-center items-center gap-x-3">
    <div
      class="flex-1 p-3 border border-solid border-bwhite dark:border-bblack rounded-xl overflow-x-scroll"
    >
      <p id="shortened-link" class="text-mono font-light"></p>
    </div>
    <button
      id="copy-button-element"
      class="cursor-pointer flex items-center"
      aria-label={localizedCopyButton[locale]}
      title={localizedCopyButton[locale]}
    >
      <div
        class="grid grid-cols-2 gap-x-1 [grid-template-areas:'iconzone'] justify-items-center"
      >
        <div id="share-button">
          <ShareIcon />
        </div>
        <div class="grid [grid-area:iconzone]" id="copy-button">
          <CopyIcon />
        </div>
        <div class="grid [grid-area:iconzone] opacity-0" id="ok-button">
          <OKIcon />
        </div>
      </div>
    </button>
  </div>
  <Button
    id="shorten-more-links"
    ariaBusy={false}
    ariaLabel={localizedShortenMore[locale]}
  >
    <p>{localizedShortenMore[locale]}</p>
  </Button>
</div>
<script>
  import { handleShare } from "@/utils/share-link";
  import { handleCopy } from "@/utils/copy-link";

  handleShare();
  handleCopy();

  const shortenMoreLinksButton = document.querySelector<HTMLElement>(
    "#shorten-more-links",
  );
  const shortenedLinkSection = document.querySelector(
    "#shortened-link-section",
  );
  const submitLinkSection = document.querySelector("#submit-link-section");
  const longUrlInput = document.querySelector<HTMLInputElement>("#long-url");
  const shortenedLink = document.querySelector("#shortened-link");

  if (shortenMoreLinksButton) {
    shortenMoreLinksButton.addEventListener("click", () => {
      if (submitLinkSection && shortenedLinkSection && longUrlInput) {
        submitLinkSection.classList.remove("invisible");
        submitLinkSection.classList.add("visible");

        shortenedLinkSection.classList.add("invisible");
        shortenedLinkSection.classList.remove("visible");

        longUrlInput.value = "";

        if (shortenedLink) {
          shortenedLink.textContent = "";
        }
      }
    });
  }
</script>
